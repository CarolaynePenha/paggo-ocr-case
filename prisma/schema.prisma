generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  name      String
  email     String    @unique
  session   Session[]

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  token     String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Company {
  id              Int       @id @default(autoincrement())
  createdAt       DateTime  @default(now())
  name            String?
  cpfCnpj         String?   @unique
  address         String?
  phoneNumber     String?
  city            String?
  state           String?
  email           String?   @unique
  InvoicePayer    Invoice[] @relation("Payer")
  InvoiceReceiver Invoice[] @relation("Receiver")

  @@map("companies")
}

model BankInfo {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  bankName  String?
  agency    String?
  account   String?
  pixKey    String?
  Invoice   Invoice[]

  @@map("bankInfos")
}

model Invoice {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  textRaw      String
  imageLink    String   @unique
  imageName    String   @unique
  number       String?
  totalAmount  Int?
  netAmount    Int?
  issuanceDate String?
  description  String?
  bankInfoId   Int
  bankInfo     BankInfo @relation(fields: [bankInfoId], references: [id])
  payerId      Int
  payer        Company  @relation("Payer", fields: [payerId], references: [id])
  receiverId   Int
  receiver     Company  @relation("Receiver", fields: [receiverId], references: [id])

  @@map("invoices")
}
